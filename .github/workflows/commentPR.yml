name: Comment PR

on:
  workflow_run:
    workflows: ["Check PR"]
    types:
      - completed

env:
   build_status_filename: "build_status"
   pr_id_key: "pullrequestid"
   run_id_key: "runid"

jobs:
  add_comment:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.event == 'pull_request'
    strategy:
      matrix:
        jobstep: [testcomment,buildstatus]

    steps:
      # Waiting https://github.com/actions/download-artifact/issues/172
      # We are using github script
      # Inspired by : https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
      - name: Download Build Status Archive
        uses: actions/github-script@v6.3.3
        with:
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == '${{env.build_status_filename}}'
            })[0];
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/${{env.build_status_filename}}.zip', Buffer.from(download.data));
            
      - name: Unzip Build Status Archive
        run: unzip ${{env.build_status_filename}}.zip

      - name: Read Build Status Properties File
        id: read_property
        uses: christian-draeger/read-properties@1.1.0
        with:
          path: ${{env.build_status_filename}}
          properties: ${{env.pr_id_key}} ${{ matrix.jobstep }} ${{env.run_id_key}}

      - name: Download Add Comment Action
        if: ${{ steps.read_property.outputs[matrix.jobstep] == 'failure'}}
        uses: Bhacaz/checkout-files@v2
        with:
          files: .github/actions/utils/addcomment/action.yml

      - name: Add Comment on failure
        if: ${{ steps.read_property.outputs[matrix.jobstep] == 'failure'}} 
        uses: ./.github/actions/utils/addcomment
        with:
          pullrequest_id: ${{ steps.read_property.outputs[env.pr_id_key]}}
          action_name: ${{ matrix.jobstep }}
          job_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{steps.read_property.outputs[env.run_id_key]}}

      - name: Delete Comment on Success
        if: ${{ steps.read_property.outputs[matrix.jobstep] == 'success'}}
        uses: marocchino/sticky-pull-request-comment@v2.2.0
        with:
          number: ${{ steps.read_property.outputs[env.pr_id_key]}}
          header: ${{matrix.jobstep}}
          delete: true
